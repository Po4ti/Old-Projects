<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCherryWhite</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroyMe = false;
num = 4;
ang = 0;
rad[0] = 128;
rad[1] = 192;

curRad[0] = 0;
curRad[1] = 32; 
set=0;

for(i=0;i&lt;2;i++){
    for(j=0;j&lt;num;j++){
        xx = x + lengthdir_x(curRad[i],360/num*j);
        yy = y + lengthdir_y(curRad[i],360/num*j);
        inst[i,j] = instance_create(xx,yy,objMonoeyeBigBullet);
    }
}

alarm[2] = 150;
spd = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndFELaser,0,0);

alarm[2] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroyMe = true;

for(i=0;i&lt;2;i++){
    for(j=0;j&lt;num;j++){
        inst[i,j].dir = point_direction(inst[i,j].x,inst[i,j].y,x,y);
        inst[i,j].alarm[0] = 50 + 60*i;
    }
}

alarm[2] = -1;
alarm[1] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!destroyMe) {/*
    for(i=0;i&lt;2;i++) {
        for(j=0;j&lt;num;j++){
            inst[i,j].x = x + lengthdir_x(curRad[i],360/num*j+(ang*(-1*i)));
            inst[i,j].y = y + lengthdir_y(curRad[i],360/num*j+(ang*(-1*i))); 
            inst[i,j].dir = (360/num*j)+ang;
        }
    }*/
    for(j=0;j&lt;num;j++){
        inst[0,j].x = x + lengthdir_x(curRad[0],360/num*j+ang);
        inst[0,j].y = y + lengthdir_y(curRad[0],360/num*j+ang); 
        inst[0,j].dir = (360/num*j)+ang;
    }

    for(j=0;j&lt;num;j++){
        inst[1,j].x = x + lengthdir_x(curRad[1],360/num*j-ang);
        inst[1,j].y = y + lengthdir_y(curRad[1],360/num*j-ang); 
        inst[1,j].dir = (360/num*j)-ang;
    }
       
    for(i=0;i&lt;2;i++) {
        if(curRad[i] &lt; rad[i]) {
            curRad[i] += 4;
        }  
        else {
            ang += spd;
            ang = (ang mod 360);   
        }          
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
