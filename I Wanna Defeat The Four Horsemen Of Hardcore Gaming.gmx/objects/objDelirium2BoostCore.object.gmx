<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoostCore</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>objDeliriumObstacleDamager</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bigGunX = x+44;
bigGunY = y;
smallGun1X = x+44;
smallGun2X = x+44;
smallGun1Y = y-68;
smallGun2Y = y+68;

smallGun1dir = point_direction(x,y,smallGun1X,smallGun1Y);
smallGun1dist = point_distance(x,y,smallGun1X,smallGun1Y);

smallGun2dir = point_direction(x,y,smallGun2X,smallGun2Y);
smallGun2dist = point_distance(x,y,smallGun2X,smallGun2Y);

bigGundir = point_direction(x,y,bigGunX,bigGunY);
bigGundist = point_distance(x,y,bigGunX,bigGunY);

nextattack = 0;
towardsPlayer = false;
clockWise = false;
rotateToInitial = false;
rotateTo270 = false;
rotateTo90 = false;

xs=x;
ys=y;

counter = 0;
inst = noone;

i = 0;
j = 0;

alarm[0] = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shoot barrier at player
if(!instance_exists(objPlayer)) {
    exit;
}

var vertical = choose(0,1);
var playerPosX = floor(objPlayer.x div 216);
var playerPosY = floor(objPlayer.y div 216);


if(!vertical) {
    if(playerPosY &lt;= 1) {
        inst = instance_create(40+176*playerPosX,560,objDelirium2Hrazryad);
        inst.vspeed = -4;
    }
    else {
        inst = instance_create(40+176*playerPosX,32,objDelirium2Hrazryad);
        inst.vspeed = 4;
    }
}
else {
    if(playerPosX &gt;= 2) {
        inst = instance_create(32,40+176*playerPosY,objDelirium2Vrazryad);
        inst.hspeed = 4;
    }
    else {
        inst = instance_create(736,40+176*playerPosY,objDelirium2Vrazryad);
        inst.hspeed = -4;
    }
}
audio_play_sound(sndBCElectroWall,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm[3]'s helper to shoot
inst = instance_create(smallGun1X,smallGun1Y,objBoostCoreBounceBall);
inst.direction = image_angle;
inst.speed = 6;
inst = instance_create(smallGun2X,smallGun2Y,objBoostCoreBounceBall);
inst.direction = image_angle;
inst.speed = 6;
audio_play_sound(sndBCElectricBullet,0,0);
alarm[4] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///choose down or up and spam bouncing bullets
var dist;

if(counter == 0) {
    alarm[5] = 75;
    dist = point_distance(x,y,xs,ys);
    if(dist == 0) {
        alarm[3] = 2;
    }
    else {
        speed = 7;
        image_angle = point_direction(x,y,xs,ys);
        direction = image_angle;
        dist = point_distance(x,y,xs,ys);
        friction = scrCalcFriction(dist,7);
        alarm[3] = scrCalcTime(dist,7)+100;
    }
}
if(counter == 1) {
    speed = 0;
    friction = 0;
    vspeed = choose(-4,4);
    if(vspeed == -4) {
        rotateTo270 = true;
        clockWise = (floor(image_angle) &gt; 270);
    }
    else {
        rotateTo90 = true;
        clockWise = (floor(image_angle) &gt; 90);
    }
    audio_play_sound(sndBCRotate,0,0);
    alarm[3] = scrCalcTime(168,4)+5;
}
if(counter &gt; 1 &amp;&amp; counter &lt; 4) {
    if(vspeed == -4) {
        path_start(pthBoostCoreURL,4,path_action_stop,0);
    }
    else {
        path_start(pthBoostCoreDRL,4,path_action_stop,0);
    }
    alarm[4] = 5;
}
if(counter == 4) {
    alarm[4] = -1;
    inst = instance_create(bigGunX,bigGunY,objBoostCoreBigBullet);
    inst.alm = 0;
    image_angle = 0;
}

counter++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move up or down and shoot a volley
vspeed = 0;
if(!instance_exists(objPlayer)) {
    exit;
}

if(counter == 0) {
    vspeed = -4;
    if(y &lt; 288) {
        vspeed = 4;
    }
    towardsPlayer = true;
    alarm[5] = irandom_range(50,75);
    alarm[2] = scrCalcTime(168,4);
} 
if(counter == 1) {
    objBoostCoreBarrierController.alarm[6] = 1;
}
if(counter &gt; 0 &amp;&amp; counter &lt; 17) {
    angle = irandom(90);
    for(i=0;i&lt;4;i++) {
        for(j=6;j&gt;4;j--) {
            inst = instance_create(smallGun1X,smallGun1Y,objBoostCoreBullet);
            inst.speed = j;
            inst.direction = angle + i * 90;
        }
    }
    for(i=0;i&lt;4;i++) {
        for(j=6;j&gt;4;j--) {
            inst = instance_create(smallGun2X,smallGun2Y,objBoostCoreBullet);
            inst.speed = j;
            inst.direction = angle + i * 90;
        }
    }
    audio_play_sound(sndBCSmallBullet,0,0);
    alarm[2] = 10;
}
if(counter == 17) {
    towardsPlayer = false;
    rotateToInitial = true;
    audio_play_sound(sndBCRotate,0,0);
    clockWise = (floor(image_angle) &lt; 180);
    inst = instance_create(bigGunX,bigGunY,objBoostCoreBigBullet);
    inst.alm = 0;
}

counter++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move to left side and spam bullets
hspeed = 0;
if(counter == 0) {
    objBoostCoreBarrierController.enable = false;
    objBoostCoreBarrierController.alarm[0] = 1
    hspeed = -4;
    alarm[5] = 50;
    towardsPlayer = true;
    alarm[1] = scrCalcTime(528,4);
} 
if(counter &gt; 0 &amp;&amp; counter &lt; 25) {
    inst = instance_create(smallGun1X,smallGun1Y,objBoostCoreBullet);
    inst.direction = point_direction(smallGun1X,smallGun1Y,objPlayer.x,objPlayer.y);
    inst.speed = 6;
    inst = instance_create(smallGun2X,smallGun2Y,objBoostCoreBullet);
    inst.direction = point_direction(smallGun2X,smallGun2Y,objPlayer.x,objPlayer.y);
    inst.speed = 6;
    audio_play_sound(sndBCSmallBullet,0,0);
    alarm[1] = 7;
}
if(counter == 25) {
    towardsPlayer = false;
    rotateToInital = true;
    audio_play_sound(sndBCRotate,0,0);
    clockWise = (floor(image_angle) &lt; 180);
    inst = instance_create(bigGunX,bigGunY,objBoostCoreBigBullet);
    inst.alm = 1;
}
if(counter &gt;= 26) {
    hspeed = 4;
    alarm[0] = scrCalcTime(528,4)+5;
}

counter++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nextattack = choose(1,2,3);
clockWise = false;
counter = 0;
speed = 0;

objBoostCoreBarrierController.enable = false;
objBoostCoreBarrierController.alarm[1] = 1;

alarm[nextattack] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(objPlayer)) {
    for(i=0;i&lt;6;i++) {
        alarm[i]=-1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bigGunX = x+lengthdir_x(bigGundist,bigGundir+image_angle);
bigGunY = y+lengthdir_y(bigGundist,bigGundir+image_angle);

smallGun1X = x+lengthdir_x(smallGun1dist,smallGun1dir+image_angle);
smallGun1Y = y+lengthdir_y(smallGun1dist,smallGun1dir+image_angle);

smallGun2X = x+lengthdir_x(smallGun2dist,smallGun2dir+image_angle);
smallGun2Y = y+lengthdir_y(smallGun2dist,smallGun2dir+image_angle);


if(rotateTo270) {
    if(clockWise) {
        if(image_angle &gt; 270) {
            image_angle -= 6;
        }
        else {
            image_angle = 270;
            rotateTo270 = false;
        }
    }
    else {
        if(image_angle &lt; 270) {
            image_angle += 6;
        }
        else {
            image_angle = 270;
            rotateTo270 = false;
        }
    }
}

if(rotateTo90) {
    if(clockWise) {
        if(image_angle &gt; 90) {
            image_angle -= 6;
        }
        else {
            image_angle = 90;
            rotateTo90 = false;
        }
    }
    else {
        if(image_angle &lt; 90) {
            image_angle += 6;
        }
        else {
            image_angle = 90;
            rotateTo90 = false;
        }
    }
}

if(rotateToInitial) {
    if(clockWise) {
        if(image_angle &gt; 0) {
            image_angle -= 6;
        }
        else {
            image_angle = 0;
            rotateToInitial = false;
        }
    }
    else {
        if(image_angle &lt; 360) {
            image_angle += 6;
        }
        else {
            image_angle = 0;
            rotateToInitial = false;
        }
    }
}

if(towardsPlayer) {
    image_angle = scrGetAngle(objPlayer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other) {
    instance_destroy();
}

if(objDelirium.curHP &gt; 40) {
    objDelirium.curHP -= 20;
    audio_stop_sound(sndEEHit);
    audio_play_sound(sndEEHit,0,0);
}
else {
    instance_create(x,y,objBagatskyShield);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(nextattack == 3) {
    alarm[3] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
