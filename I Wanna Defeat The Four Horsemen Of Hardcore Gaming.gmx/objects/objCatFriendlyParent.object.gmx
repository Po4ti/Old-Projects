<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = 0;
delay = 0;
del = 0;
bullet = sprBullet;
bulletSpd = 0;
enemy = false;
range = 32;
rangeDel = irandom_range(-3,3);
HP = 0;
dmg = 0;
charm = 0;
vis = false;
shadow = false;
mask = -1;
placeholder = 0;
wasp = false;
y += random_range(-8,8);

idle = sprite_index;
run = sprite_index + 1;

depth = 608-y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if enemy {
    xScale = 1;
} else {
    xScale = -1;
}

image_xscale = xScale;
//otherCat = collision_rectangle(x +(range+rangeDel) * xScale, 0, x, 608, objCatEnemyParent, 1, 1);
//meetBase = collision_rectangle(x + (range+rangeDel) * xScale, 0, x, 608, objBaseParent, 1, 1);

otherCat = collision_rectangle(x +(range+rangeDel) * xScale, 0, x, 608, objCatEnemyParent, 1, 1);

if otherCat != noone {
    meetBase = noone;
    if otherCat.enemy = enemy {
        otherCat = noone;
        meetBase = collision_rectangle(x + (range+rangeDel) * xScale, 0, x, 608, objBaseParent, 1, 1);
    }
} else {
    meetBase = collision_rectangle(x + (range+rangeDel) * xScale, 0, x, 608, objBaseParent, 1, 1);
}

if meetBase != noone {
    if meetBase.enemy = enemy {
        meetBase = noone;
    }
}

if otherCat = noone &amp;&amp; meetBase = noone {
    x += spd*xScale;
    sprite_index = run;
    image_speed = 1/2;
} else {
    sprite_index = idle;
    image_speed = 1/5;
}

if del &gt; 0 {
    del --;
}

if otherCat != noone &amp;&amp; otherCat.enemy != enemy &amp;&amp; del = 0 {
    del = delay;
    var c = instance_create(x,y,objCatBullet);
    c.speed = bulletSpd;
    c.sprite_index = bullet;
    c.target = otherCat;
    c.dmg = dmg;
    c.charm = charm
    c.visible = vis;
    c.shadow = shadow;
    c.direction = point_direction(x,y,otherCat.x,otherCat.y);
        
}

if meetBase != noone &amp;&amp; meetBase.enemy != enemy &amp;&amp; del = 0 {
    del = delay;
    var c = instance_create(x,y,objCatBullet);
    c.speed = bulletSpd;
    c.sprite_index = bullet;
    c.target = meetBase;
    c.dmg = dmg;
    c.charm = charm; 
    c.visible = vis;
    c.shadow = shadow;
    c.direction = point_direction(x,y,meetBase.x,meetBase.y);
        
}



if HP &lt;= 0 {
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if wasp {
    scrDrawOutline(2,2,c_red);
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
