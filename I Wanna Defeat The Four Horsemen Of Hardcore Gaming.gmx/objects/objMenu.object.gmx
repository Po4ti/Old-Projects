<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menuArrows[0] = instance_create(288,448,objMenuArrow);
menuArrows[1] = instance_create(512,448,objMenuArrow);
menuArrows[1].image_xscale=-1;
selector = instance_create(688,464,objSaveSelector);
xx=0;
yy=0;
warnMessage=false;
select = 0;

//load save file values
curSave = 0;
str[0] = "Save1";
str[1] = "Save2";
str[2] = "Save3";
for (var i = 0; i &lt; 3; i++)
{
    if (file_exists("Data\save"+string(i+1)))  //check if current save exists
    {
        //load save data
        exists[i] = true;
        
        //load the save map
        var saveMap;
        
        var f = file_text_open_read("Data\save"+string(i+1));
        
        saveMap = ds_map_create();
        ds_map_read(saveMap,base64_decode(file_text_read_string(f)));
        
        file_text_close(f);
        
        if (saveMap != -1)  //check if the save map loaded correctly
        {
            death[i] = ds_map_find_value(saveMap,"death");
            if (is_undefined(death[i])) //check for undefined value in case the save was messed with or got corrupted
                death[i] = 0;
            
            time[i] = ds_map_find_value(saveMap,"time");
            if (is_undefined(time[i]))
                time[i] = 0;
    
            difficulty[i] = ds_map_find_value(saveMap,"difficulty");
            if (is_undefined(difficulty[i]))
                difficulty[i] = 0;
            
            for (var j = 0; j &lt; 8; j++)
            {
                boss[j,i] = ds_map_find_value(saveMap,"saveBossItem["+string(j)+"]");
                if (is_undefined(boss[j,i]))
                    boss[j,i] = false;
            }
            
            clear[i] = ds_map_find_value(saveMap,"saveGameClear");
            if (is_undefined(clear[i]))
                clear[i] = false;
            
            ds_map_destroy(saveMap);
        }
        else
        {
            //save map didn't load correctly, set the variables to the defaults
            death[i] = 0;
            time[i] = 0;
            difficulty[i] = 0;
            for (var j = 0; j &lt; 8; j++)
            {
                boss[j,i] = false;
            }
            clear[i] = false;
        }
    }
    else
    {
        exists[i] = false;
        death[i] = 0;
        time[i] = 0;
    }
    
    var t = time[i];
    
    timeStr[i] = string(t div 3600) + ":";
    t = t mod 3600;
    timeStr[i] += string(t div 600);
    t = t mod 600;
    timeStr[i] += string(t div 60) + ":";
    t = t mod 60;
    timeStr[i] += string(t div 10);
    t = t mod 10;
    timeStr[i] += string(floor(t));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!warnMessage) {
    //up &amp; down
    if(scrButtonCheckPressed(global.downButton)) {
        audio_play_sound(global.menuSound,0,0);
        select++;
        select = (select mod 4);
        for(i=0;i&lt;2;i++) {
            menuArrows[i].pos = select;
            menuArrows[i].alarm[0] = 1;
        }
    }
    if(scrButtonCheckPressed(global.upButton)) {
        audio_play_sound(global.menuSound,0,0);
        select--;
        if(select &lt; 0) {
            select = 3;
        }
        select = (select mod 4);
        for(i=0;i&lt;2;i++) {
            menuArrows[i].pos = select;
            menuArrows[i].alarm[1] = 1;
        }
    }
    //menu handling
    if(scrButtonCheckPressed(global.jumpButton)) {
        audio_play_sound(global.menuSoundSelect,0,0);
        if(select == 0) {
            if(exists[curSave]) {
                scrLoadGame(true);
            }
        }
        else if(select == 1) {
            if(exists[curSave]) { //press if save exists
                warnMessage = true;
            }
            else {
                event_user(0); // start game
            }
        }
        else if(select == 2) {
            room_goto(rOptions);
        }
        else if(select == 3) {
            game_end();
        }
    }
    //mouse
    if(mouse_check_button_pressed(mb_left)) {
    /*
        if (point_in_rectangle(mouse_x, mouse_y,688-16,464-16,688+16,464+16))
        {
            selector.y = 464;
            curSave = 0;
            global.savenum = curSave;
            audio_play_sound(sndBlockChange, 0, false);
        }
        if (point_in_rectangle(mouse_x, mouse_y,688-16,512-16,688+16,512+16))
        {
            selector.y = 512;
            curSave = 1;
            global.savenum = curSave;
            audio_play_sound(sndBlockChange, 0, false);
        }
        if (point_in_rectangle(mouse_x, mouse_y,688-16,560-16,688+16,560+16))
        {
            selector.y = 560;
            curSave = 2;
            global.savenum = curSave;
            audio_play_sound(sndBlockChange, 0, false);
        }*/
        yy=48;
        for(i=0;i&lt;3;i++) {
            if (point_in_rectangle(mouse_x, mouse_y,688-16,(464+yy*i)-16,688+16,(464+yy*i)+16))
            {
                selector.y = 464+yy*i;
                curSave = i;
                global.savenum = i+1;
                audio_play_sound(global.menuSaveSelect, 0, false);
            }
        }
    
    }
}
//if newgame is pressed while savefile exists
else {
    if(keyboard_check_pressed(ord('Y'))) {
        event_user(0);
    }
    if(keyboard_check_pressed(ord('N'))) {
        audio_play_sound(global.menuCancel,0,0);
        warnMessage = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gameStarted = true; //sets game in progress (enables saving, restarting, etc.)
global.autosave = true;

global.difficulty = 0;

if (file_exists("Data\save"+string(global.savenum))) {
    file_delete("Data\save"+string(global.savenum));
}
room_goto(global.startRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yy=32;

//load button first
if(exists[curSave]) {
    draw_sprite_ext(sprMenuButtons,0,400,448,1,1,0,c_white,1);
}
else {
    draw_sprite_ext(sprMenuButtons,0,400,448,1,1,0,c_white,0.6);
}

//other buttons
for(i=1;i&lt;4;i++) {
    draw_sprite_ext(sprMenuButtons,i,400,448+yy*i,1,1,0,c_white,1);
}
//savefile and numbers
draw_sprite(sprSaveFileSelector,-1,704,416);
yy=48;
for(i=0;i&lt;3;i++) {
    draw_sprite_ext(sprSaveFileCount,i,688,464+yy*i,1,1,0,c_white,1);
}

xx=48;
yy=304;
//Draw Data
draw_set_halign(fa_left);
draw_set_colour(c_orange);
draw_set_font(fDefault30);

draw_text(xx+2,yy,str[curSave]);


draw_set_font(fDefault12);
//draw_text(xx+10,yy-60,"curSave:"+string(curSave));
//draw_text(xx+10,yy-48,"global.savenum:"+string(global.savenum));
draw_text(xx+10,yy+70,"Deaths: "+string(death[curSave]));
draw_text(xx+10,yy+90,"Time: "+timeStr[curSave]);
if (exists[curSave])
{             
    draw_set_font(fDefault24);
    
    if(clear[curSave]){draw_text(xx+63,yy+215,"Clear!!")}
    
    if(boss[0,curSave]){
        draw_sprite(sprBossItem,0,xx+0,yy+128)
    }
    if(boss[1,curSave]){draw_sprite(sprBossItem,1,xx+32,yy+128)}
    if(boss[2,curSave]){draw_sprite(sprBossItem,2,xx+64,yy+128)}
    if(boss[3,curSave]){draw_sprite(sprBossItem,3,xx+96,yy+128)}
    if(boss[4,curSave]){draw_sprite(sprBossItem,-1,xx+0,yy+160)}
    if(boss[5,curSave]){draw_sprite(sprBossItem,-1,xx+32,yy+160)}
    if(boss[6,curSave]){draw_sprite(sprBossItem,-1,xx+64,yy+160)}
    if(boss[7,curSave]){draw_sprite(sprBossItem,-1,xx+96,yy+160)}
}
else
{
    draw_set_halign(fa_middle);
    draw_text(xx+65,yy+49,"No Data");
}
draw_set_halign(fa_middle);
if(warnMessage) {
    scrDrawTextOutline(400,304,"Are you sure?# Y/N",c_black,c_gray);
}
draw_set_font(fDefault12);
draw_set_colour(c_white);
draw_text(668,580,"use mouse to select the save");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
