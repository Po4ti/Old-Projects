<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.noPause = true;  //make it so that the player can't pause during the boss
alarm[0] = 20;

scrStopMusic();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start


////////////////Начало боссфайта/////////////////
//активация шипа, старт музыки, активация фона//
////////////////////////////////////////////////


objSpike.alarm[0] = 1; //Задать скорость

scrPlayMusic(musDestinationBoss,true);//Включить музыку

if(global.shaderEnable) {//Включение фона
    obj_BG.alarm[4] = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Деактивация если игрок умер

if(!instance_exists(objPlayer)) {
    if(instance_exists(objBottleParent)) {
        objBottleParent.alarm[11] = 1;
    }
    if(instance_exists(objBorigan)) {
        objBorigan.alarm[11] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
/*if(global.debugMode) {
    //blue
    if(instance_exists(objBlue)) {
        if(keyboard_check_pressed(vk_numpad1)) {
            objBlue.curHP = objBlue.maxHP;
            objBlue.phase = 0;
        }
        if(keyboard_check_pressed(vk_numpad2)) {
            objBlue.curHP = floor(objBlue.maxHP*(2/3));
            objBlue.phase = 1;
            //objBlue.curHP--;
        }
        if(keyboard_check_pressed(vk_numpad3)) {
            objBlue.curHP = floor(objBlue.maxHP*(1/3));
            objBlue.phase = 2;
            //objBlue.curHP--;
        }
    }
    //purple
    if(instance_exists(objPurple)) {
        if(keyboard_check_pressed(vk_numpad4)) {
            objPurple.curHP = objPurple.maxHP;
            objPurple.phase = 0;
        }
        if(keyboard_check_pressed(vk_numpad5)) {
            objPurple.curHP = floor(objPurple.maxHP*(2/3));
            objPurple.phase = 1;
            //objPurple.curHP--;
        }
        if(keyboard_check_pressed(vk_numpad6)) {
            objPurple.curHP = floor(objPurple.maxHP*(1/3));
            objPurple.phase = 2;
            //objPurple.curHP--;
        }
    }
    //red
    if(instance_exists(objRed)) {
        if(keyboard_check_pressed(vk_numpad7)) {
            objRed.curHP = objRed.maxHP;
            objRed.phase = 0;
        }
        if(keyboard_check_pressed(vk_numpad8)) {
            objRed.curHP = floor(objRed.maxHP*(2/3));
            objRed.phase = 1;
            //objRed.curHP--;
        }
        if(keyboard_check_pressed(vk_numpad9)) {
            objRed.curHP = floor(objRed.maxHP*(1/3));
            objRed.phase = 2;
            //objRed.curHP--;
        }
    }
    //yellow
    if(instance_exists(objYellow)) {
        if(keyboard_check_pressed(vk_divide)) {
            objYellow.curHP = objYellow.maxHP;
            objYellow.phase = 0;
        }
        if(keyboard_check_pressed(vk_multiply)) {
            objYellow.curHP = floor(objYellow.maxHP*(2/3));
            objYellow.phase = 1;
            //objYellow.curHP--;
        }
        if(keyboard_check_pressed(vk_subtract)) {
            objYellow.curHP = floor(objYellow.maxHP*(1/3));
            objYellow.phase = 2;
            //objYellow.curHP--;
        }
    }
    //B o r i g a n
    if(keyboard_check_pressed(vk_numpad0)) {
        objBorigan.curHP--;
    }
    //Phases
    if(instance_number(objBottleParent) &gt;= 4) {
        if(keyboard_check_pressed(ord("1"))) {
            objBlue.curHP = objBlue.maxHP;
            objBlue.phase = 0;
            objPurple.curHP = objPurple.maxHP;
            objPurple.phase = 0
            objRed.curHP = objRed.maxHP;
            objRed.phase = 0;
            objYellow.curHP = objYellow.maxHP;
            objYellow.phase = 0;
        }
        if(keyboard_check_pressed(ord("2"))) {
            objBlue.curHP = floor(objBlue.maxHP*(2/3)) ;
            objBlue.phase = 1;
            objPurple.curHP = floor(objPurple.maxHP*(2/3));
            objPurple.phase = 1;
            objRed.curHP = floor(objRed.maxHP*(2/3));
            objRed.phase = 1;
            objYellow.curHP = floor(objYellow.maxHP*(2/3));
            objYellow.phase = 1;
        }
        if(keyboard_check_pressed(ord("3"))) {
            objBlue.curHP = floor(objBlue.maxHP*(1/3)) ;
            objBlue.phase = 2;
            objPurple.curHP = floor(objPurple.maxHP*(1/3));
            objPurple.phase = 2;
            objRed.curHP = floor(objRed.maxHP*(1/3));
            objRed.phase = 2;
            objYellow.curHP = floor(objYellow.maxHP*(1/3));
            objYellow.phase = 2;
        }
        //1 HP
        if(keyboard_check_pressed(ord("4"))) {
            objBlue.curHP = 1;
            objBlue.phase = 2;
            objPurple.curHP = 1;
            objPurple.phase = 2;
            objRed.curHP = 1;
            objRed.phase = 2;
            objYellow.curHP = 1;
            objYellow.phase = 2;
        }
        if(keyboard_check_pressed(ord("5"))) {
            objBorigan.curHP = 1;
        }
        if(keyboard_check_pressed(ord("6"))) {
            objBlue.curHP = 1;
            objBlue.phase = 2;
        }
        if(keyboard_check_pressed(ord("7"))) {
            objPurple.curHP = 1;
            objPurple.phase = 2;
        }
        if(keyboard_check_pressed(ord("8"))) {
            objRed.curHP = 1;
            objRed.phase = 2;
        }
        if(keyboard_check_pressed(ord("9"))) {
            objYellow.curHP = 1;
            objYellow.phase = 2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
