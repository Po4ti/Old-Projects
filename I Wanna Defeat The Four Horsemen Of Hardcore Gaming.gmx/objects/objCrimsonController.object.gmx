<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hardMode = false; //Хардмод
global.noPause = true;  //make it so that the player can't pause during the boss
scrStopMusic();
seq=0; //Переменная для смены позиций

if(global.shaderEnable) { //Шейдеры
    obj_BG.alarm[0] = 1;
    obj_BG.alarm[4] = 1;
}

alarm[0] = 20; //Музыка, аларм для смены позиций

final=false; //Финал

//Green Blue Red Yellow
posX[0] = 96;
posX[1] = 704;
posX[2] = 704;
posX[3] = 96;

posY[0] = 128;
posY[1] = 128;
posY[2] = 480;
posY[3] = 480;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Музыка хардмода
scrPlayMusic(musPlatformless,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Активация хардмода, музыки

scrStopMusic();
audio_play_sound(sndCrimsonHardMusIntro,0,0);
alarm[3] = 73;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Смена позиций
//Green Blue Red Yellow - first sequence
audio_play_sound(sndBlockChange,0,0);
seq++;
seq = (seq mod 4);

if(instance_exists(objBagatskyGreen)) {
    objBagatskyGreen.x = posX[seq];
    objBagatskyGreen.y = posY[seq];
}

if(instance_exists(objBagatskyBlue)) {
    objBagatskyBlue.x = posX[((seq+1) mod 4)];
    objBagatskyBlue.y = posY[((seq+1) mod 4)];
}

if(instance_exists(objBagatskyRed)) {
    objBagatskyRed.x = posX[((seq+2) mod 4)];
    objBagatskyRed.y = posY[((seq+2) mod 4)];
    objBagatskyRed.alarm[0] = 1;
}

if(instance_exists(objBagatskyYellow)) {
    objBagatskyYellow.x = posX[((seq+3) mod 4)];
    objBagatskyYellow.y = posY[((seq+3) mod 4)];
}

alarm[1] = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Начало, музыка
scrPlayMusic(musCrimsonBoss,1);

//rotation sequence
alarm[1] = 150;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug buttons

//blue
if(global.debugMode) {
    if(instance_exists(objBagatskyBlue)) {
        if(keyboard_check_pressed(vk_numpad0)) {
            objBagatskyBlue.curHP = objBagatskyBlue.maxHP;
        }
        if(keyboard_check_pressed(vk_decimal)) {
            objBagatskyBlue.curHP--;
        }
    }
    //green
    if(instance_exists(objBagatskyGreen)) {
        if(keyboard_check_pressed(vk_numpad1)) {
            objBagatskyGreen.curHP = objBagatskyGreen.maxHP;
        }
        if(keyboard_check_pressed(vk_numpad2)) {
            objBagatskyGreen.curHP--;
        }
    }
    //red
    if(instance_exists(objBagatskyRed)) {
        if(keyboard_check_pressed(vk_numpad4)) {
            objBagatskyRed.curHP = objBagatskyRed.maxHP;
        }
        if(keyboard_check_pressed(vk_numpad5)) {
            objBagatskyRed.curHP--;
        }
    }
    //yellow
    if(instance_exists(objBagatskyYellow)) {
        if(keyboard_check_pressed(vk_numpad7)) {
            objBagatskyYellow.curHP = objBagatskyYellow.maxHP;
        }
        if(keyboard_check_pressed(vk_numpad8)) {
            objBagatskyYellow.curHP--;
        }
    }
    //Phases
    if(instance_number(objBagatskyParent) &gt;= 4) {
        if(keyboard_check_pressed(ord("1"))) {
            objBagatskyBlue.curHP = objBagatskyBlue.maxHP;
            //objBlue.phase = 0;
            objBagatskyYellow.curHP = objBagatskyYellow.maxHP;
            //objPurple.phase = 0
            objBagatskyRed.curHP = objBagatskyRed.maxHP;
            //objRed.phase = 0;
            objBagatskyGreen.curHP = objBagatskyYellow.maxHP;
            //objYellow.phase = 0;
        }
        if(keyboard_check_pressed(ord("2"))) {
            objBagatskyBlue.curHP = floor(objBagatskyBlue.maxHP*(4/5));
            objBagatskyYellow.curHP =  floor(objBagatskyYellow.maxHP*(4/5));
            objBagatskyRed.curHP =  floor(objBagatskyRed.maxHP*(4/5));
            objBagatskyGreen.curHP =  floor(objBagatskyYellow.maxHP*(4/5));
        }
        if(keyboard_check_pressed(ord("3"))) {
            objBagatskyBlue.curHP = floor(objBagatskyBlue.maxHP*(3/5));
            objBagatskyYellow.curHP =  floor(objBagatskyYellow.maxHP*(3/5));
            objBagatskyRed.curHP =  floor(objBagatskyRed.maxHP*(3/5));
            objBagatskyGreen.curHP =  floor(objBagatskyYellow.maxHP*(3/5));
        }
        if(keyboard_check_pressed(ord("4"))) {
            objBagatskyBlue.curHP = floor(objBagatskyBlue.maxHP*(2/5));
            objBagatskyYellow.curHP =  floor(objBagatskyYellow.maxHP*(2/5));
            objBagatskyRed.curHP =  floor(objBagatskyRed.maxHP*(2/5));
            objBagatskyGreen.curHP =  floor(objBagatskyYellow.maxHP*(2/5));
        }
        if(keyboard_check_pressed(ord("5"))) {
            objBagatskyBlue.curHP = floor(objBagatskyBlue.maxHP*(1/5));
            objBagatskyYellow.curHP =  floor(objBagatskyYellow.maxHP*(1/5));
            objBagatskyRed.curHP =  floor(objBagatskyRed.maxHP*(1/5));
            objBagatskyGreen.curHP =  floor(objBagatskyYellow.maxHP*(1/5));
        }
        //1 HP
        if(keyboard_check_pressed(ord("6"))) {
            objBagatskyBlue.curHP = 1;
            objBagatskyGreen.curHP =  2;
            objBagatskyRed.curHP =  1;
            objBagatskyYellow.curHP =  1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if(!instance_exists(objBagatskyYellow) &amp;&amp; !instance_exists(objBagatskyGreen) &amp;&amp; !instance_exists(objBagatskyBlue) &amp;&amp; !instance_exists(objBagatskyRed)) {
    scrStopMusic();
    with(objPlayerKiller) {
        instance_destroy();
    }
    var inst = instance_create(416,128,objBagatskyDeath);
    inst.hardMode = hardMode;
    with(objInfJump) {
        instance_destroy();
    }
    
    with(objGreenCrash) {
        instance_destroy();
    }
           
    with(objGensokyoBullet) {
        instance_destroy();
    }
    with(objGreenSpawner) {
        instance_destroy();
    }
    with(objGreenTarget) {
        instance_destroy();
    }
    with(objCrimsonBlock) {
        image_index=1;
    }
    if(global.shaderEnable) {
        obj_BG.alarm[4] = 1;
    }
    else {
        background_visible[0] = false;
    }
    instance_create(0,0,objWhiteFlash);
    audio_play_sound(sndBoom,0,0);
    instance_destroy();
}
else if instance_number(objBagatskyParent) = 4 &amp;&amp; (objBagatskyParent.finalStarted == false &amp;&amp; objBagatskyGreen.waitingForFinal &amp;&amp; objBagatskyYellow.waitingForFinal &amp;&amp; objBagatskyRed.waitingForFinal &amp;&amp; objBagatskyBlue.waitingForFinal) {
    objBagatskyParent.waitingForFinal = false;
    objBagatskyParent.finalStarted = true;
    instance_create(0,0,objInfJump);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
